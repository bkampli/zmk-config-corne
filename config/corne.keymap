/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            layers = <0>;
        };

        bt_clr_profile {
            bindings = <&bt BT_CLR>;
            key-positions = <5 6>;
            layers = <3>;
        };

        Caps_Lock {
            bindings = <&kp CAPS>;
            key-positions = <25 26>;
            layers = <0>;
        };

        Repeat_L {
            bindings = <&key_repeat>;
            key-positions = <38 37>;
            layers = <0>;
        };

        Repeat_R {
            bindings = <&key_repeat>;
            key-positions = <39 40>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp F  &kp P         &kp B            &kp J      &kp L           &kp U             &kp Y         &kp DELETE  &none
&none  &kp A  &kp R  &kp S  &kp T         &kp G            &kp M      &kp N           &kp E             &kp I         &kp O       &none
&none  &kp Z  &kp X  &kp C  &kp D         &kp V            &kp K      &kp H           &kp LEFT_CONTROL  &kp LEFT_ALT  &kp RET     &none
                     &mo 1  &kp LEFT_GUI  &kp BACKSPACE    &kp SPACE  &kp LEFT_SHIFT  &mo 2
            >;
        };

        layer1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp HOME  &kp UP_ARROW  &kp END    &kp PG_UP  &kp INS            &kp N7  &kp N8          &kp N9  &kp N0   &kp PLUS  &none
&none  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PG_DN  &kp PRINTSCREEN    &kp N4  &kp N5          &kp N6  &none    &none     &none
&none  &none     &none         &none      &kp LCTRL  &kp LEFT_ALT       &kp N1  &kp N2          &kp N3  &kp DOT  &trans    &none
                               &trans     &none      &trans             &trans  &kp LEFT_SHIFT  &trans
            >;
        };

        layer2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp TILDE          &kp UNDER  &kp PLUS   &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp AMPS    &kp ASTRK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE      &none
&none  &kp DOUBLE_QUOTES  &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp DOLLAR  &kp PERCENT  &kp CARET             &kp RIGHT_BRACE        &kp PIPE       &none
&none  &kp SINGLE_QUOTE   &kp SEMI   &kp COLON  &kp LESS_THAN     &kp GREATER_THAN     &kp EXCL    &kp AT       &kp HASH              &kp SLASH              &kp BACKSLASH  &none
                                     &trans     &kp COMMA         &trans               &trans      &kp PERIOD   &trans
            >;
        };

        layer3 {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &kp F7  &kp F8  &kp F9  &kp F10  &none  &none
&none  &none         &none         &kp LEFT_SHIFT  &none         &none           &kp F4  &kp F5  &kp F6  &kp F11  &none  &none
&none  &none         &none         &kp LCTRL       &kp LEFT_ALT  &none           &kp F1  &kp F2  &kp F3  &kp F12  &none  &none
                                   &trans          &none         &trans          &trans  &none   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3_condition {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
