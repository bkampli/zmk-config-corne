/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0 1 2>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            layers = <0 1 2>;
        };

        Delete {
            bindings = <&kp DEL>;
            key-positions = <10 9>;
            layers = <0 2 1>;
        };

        atl_ctrl_del {
            bindings = <&kp LA(LC(DEL))>;
            key-positions = <33 32>;
            layers = <2>;
        };

        bt_clr_profile {
            bindings = <&bt BT_CLR>;
            key-positions = <5 6>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q  &kp W  &kp E  &kp R               &kp T            &kp Y      &kp U                   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F               &kp G            &kp H      &kp J                   &kp K      &kp L    &kp RIGHT_SHIFT
&kp Z  &kp X  &kp C  &kp V               &kp B            &kp N      &kp M                   &kp COMMA  &kp DOT  &kp RET
                 &mo 1  &mt LCTRL LEFT_GUI  &kp BACKSPACE    &kp SPACE  &mt LEFT_ALT RIGHT_GUI  &mo 2
            >;
        };

        layer1 {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
            // | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
            // |     |     |     |     |     |   |     |     |     |     |     |
            //             | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none     &kp UP_ARROW  &none      &kp HOME   &kp PG_UP       &kp N7  &kp N8  &kp N9  &kp MINUS  &kp PLUS
&kp LEFT  &kp DOWN      &kp RIGHT  &kp END    &kp PG_DN       &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp LEFT_SHIFT
&none     &none         &none      &kp LCTRL  &kp LEFT_ALT    &kp N1  &kp N2  &kp N3  &kp DOT    &trans
                           &trans     &none      &trans          &trans  &kp N0  &none
            >;
        };

        layer2 {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
            //                   | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCL   &kp AT             &kp HASH       &kp DLLR          &kp PRCNT       &kp CARET  &kp AMPS   &kp ASTERISK      &kp LPAR           &kp RPAR
&kp COLON  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION    &kp UNDER  &kp PLUS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp BSLH
&kp SEMI   &kp SINGLE_QUOTE   &kp COMMA      &kp PERIOD        &kp SLASH       &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
                                 &trans         &kp LEFT_SHIFT    &trans          &trans     &kp PIPE   &trans
            >;
        };

        layer3 {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6  &kp F7  &kp F8  &kp F9      &kp F10
&none         &none         &none         &none         &none           &none   &none   &none   &kp F11     &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &none   &bt BT_CLR  &trans
                               &trans        &none         &trans          &trans  &none   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3_condition {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
